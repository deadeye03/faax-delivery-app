// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model DeliveryAgent {
  id              String     @id @default(auto()) @map("_id") @db.ObjectId
  clerkId         String     @unique
  name            String
  phoneNumber     String
  email           String     @unique
  address         String?
  isAvailable     Boolean    @default(true)
  totalDeliveries Int        @default(0)
  totalEarnings   Float      @default(0)
  ratings         Float      @default(0)
  deliveries      Delivery[]
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
}

model Delivery {
  id                   String         @id @default(auto()) @map("_id") @db.ObjectId
  orderId              String // Reference to the order in the e-commerce database
  deliveryAgent        DeliveryAgent? @relation(fields: [deliveryAgentId], references: [id])
  deliveryAgentId      String?        @db.ObjectId
  status               DeliveryStatus @default(ASSIGNED)
  deliveryAddress      String
  customerName         String
  phoneNumber          String
  deliveryMode         String?
  expectedDeliveryTime DateTime?
  actualDeliveryTime   DateTime?
  customerSignature    String?
  deliveryNotes        String?
  orderSummary         OrderSummary
  createdAt            DateTime       @default(now())
  updatedAt            DateTime       @updatedAt
}

type OrderSummary {
  totalAmount   Float
  itemsQuantity Int
  paymentMethod String
  orderItems    OrderItemSummary[]
}

type OrderItemSummary {
  productId String
  name      String
  price     Float
  quantity  Int
  color     String
  size      String
  category  String
  image     String
}

enum DeliveryStatus {
  ASSIGNED
  PICKED_UP
  IN_TRANSIT
  DELIVERED
  FAILED
  RETURNED
}
